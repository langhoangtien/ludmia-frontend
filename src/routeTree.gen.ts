/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as IndexImport } from './routes/index'
import { Route as ProductsPurfectFuelBlendImport } from './routes/products/purfect-fuel-blend'
import { Route as ProductsOptilifeBlendImport } from './routes/products/optilife-blend'
import { Route as AdminUserImport } from './routes/admin/user'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AdminRouteRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsPurfectFuelBlendRoute = ProductsPurfectFuelBlendImport.update({
  id: '/products/purfect-fuel-blend',
  path: '/products/purfect-fuel-blend',
  getParentRoute: () => rootRoute,
} as any)

const ProductsOptilifeBlendRoute = ProductsOptilifeBlendImport.update({
  id: '/products/optilife-blend',
  path: '/products/optilife-blend',
  getParentRoute: () => rootRoute,
} as any)

const AdminUserRoute = AdminUserImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => AdminRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/admin/user': {
      id: '/admin/user'
      path: '/user'
      fullPath: '/admin/user'
      preLoaderRoute: typeof AdminUserImport
      parentRoute: typeof AdminRouteImport
    }
    '/products/optilife-blend': {
      id: '/products/optilife-blend'
      path: '/products/optilife-blend'
      fullPath: '/products/optilife-blend'
      preLoaderRoute: typeof ProductsOptilifeBlendImport
      parentRoute: typeof rootRoute
    }
    '/products/purfect-fuel-blend': {
      id: '/products/purfect-fuel-blend'
      path: '/products/purfect-fuel-blend'
      fullPath: '/products/purfect-fuel-blend'
      preLoaderRoute: typeof ProductsPurfectFuelBlendImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AdminRouteRouteChildren {
  AdminUserRoute: typeof AdminUserRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminUserRoute: AdminUserRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/admin/user': typeof AdminUserRoute
  '/products/optilife-blend': typeof ProductsOptilifeBlendRoute
  '/products/purfect-fuel-blend': typeof ProductsPurfectFuelBlendRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/admin/user': typeof AdminUserRoute
  '/products/optilife-blend': typeof ProductsOptilifeBlendRoute
  '/products/purfect-fuel-blend': typeof ProductsPurfectFuelBlendRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/admin/user': typeof AdminUserRoute
  '/products/optilife-blend': typeof ProductsOptilifeBlendRoute
  '/products/purfect-fuel-blend': typeof ProductsPurfectFuelBlendRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/login'
    | '/admin/user'
    | '/products/optilife-blend'
    | '/products/purfect-fuel-blend'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/login'
    | '/admin/user'
    | '/products/optilife-blend'
    | '/products/purfect-fuel-blend'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/login'
    | '/admin/user'
    | '/products/optilife-blend'
    | '/products/purfect-fuel-blend'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  ProductsOptilifeBlendRoute: typeof ProductsOptilifeBlendRoute
  ProductsPurfectFuelBlendRoute: typeof ProductsPurfectFuelBlendRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  ProductsOptilifeBlendRoute: ProductsOptilifeBlendRoute,
  ProductsPurfectFuelBlendRoute: ProductsPurfectFuelBlendRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/login",
        "/products/optilife-blend",
        "/products/purfect-fuel-blend"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin/route.tsx",
      "children": [
        "/admin/user"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/admin/user": {
      "filePath": "admin/user.tsx",
      "parent": "/admin"
    },
    "/products/optilife-blend": {
      "filePath": "products/optilife-blend.tsx"
    },
    "/products/purfect-fuel-blend": {
      "filePath": "products/purfect-fuel-blend.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
